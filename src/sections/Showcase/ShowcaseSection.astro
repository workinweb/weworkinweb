---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { ExternalLink, Search } from "lucide-react";

const templates = await getCollection("templates");
const sortedTemplates = templates
  .sort((a, b) => Number(a.data.title) - Number(b.data.title))
  .map((template) => ({
    slug: template.slug,
    title: template.data.title,
    description: template.data.description,
    image: template.data.image,
    link: template.data.link,
    code: template.data.code,
    category: template.data.category,
  }));

const categories = ["all", ...new Set(sortedTemplates.map((t) => t.category))];
---

<section class="relative py-20 overflow-hidden">
  <div
    class="absolute inset-0 bg-gradient-to-br from-slate-50 to-orange-50 dark:from-slate-900 dark:to-slate-800"
  >
    <div
      class="absolute inset-0 bg-grid-slate-200 [mask-image:linear-gradient(0deg,white,transparent)]"
      aria-hidden="true"
    >
    </div>
  </div>

  <div class="relative max-w-7xl mx-auto px-4">
    <div class="mb-10 text-center">
      <h1
        class="text-5xl font-bold bg-gradient-to-r from-orange-500 to-amber-500 bg-clip-text text-transparent inline-block"
      >
        Templates
      </h1>
      <div
        class="h-1 w-24 bg-gradient-to-r from-orange-500 to-amber-500 mx-auto mt-4 rounded-full"
      >
      </div>

      <p
        class="text-lg text-slate-600 dark:text-slate-300 mt-6 max-w-2xl mx-auto"
      >
        Preview Your Future Online Presence Explore our showcase of professional
        landing page designs to envision how your business could look online
      </p>
    </div>

    <div class="flex flex-col gap-6 mb-4">
      <div class="relative mx-auto w-full max-w-2xl mb-4 sm:mb-8">
        <Search
          className="absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-slate-400"
        />

        <input
          type="search"
          id="search-input"
          placeholder="Search templates..."
          class="w-full pl-12 text-foreground pr-4 py-3 rounded-xl bg-white dark:bg-slate-800 shadow-lg focus:ring-2 focus:ring-orange-500 outline-none"
        />
      </div>

      <div
        class="overflow-x-auto pb-4 scrollbar-thin scrollbar-thumb-orange-500 scrollbar-track-transparent"
      >
        <div class="flex gap-4 min-w-max px-2">
          {
            categories.map((category) => (
              <button
                class={`category-btn px-6 py-2 rounded-full text-sm font-medium transition-all duration-300 
              hover:scale-105 hover:shadow-lg text-foreground
              ${
                category === "all"
                  ? "bg-gradient-to-r from-orange-500 to-amber-500 text-white"
                  : "bg-white dark:bg-slate-800"
              }
              data-[active=true]:bg-gradient-to-r data-[active=true]:from-orange-500 data-[active=true]:to-amber-500 data-[active=true]:text-white
              data-[active=false]:bg-white data-[active=false]:dark:bg-slate-800`}
                data-category={category}
                data-active={category === "all"}
              >
                {category.charAt(0).toUpperCase() + category.slice(1)}
              </button>
            ))
          }
        </div>
      </div>
    </div>

    <div
      id="template-container"
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
    >
      {
        sortedTemplates.map((template, index) => (
          <div
            class="group bg-white dark:bg-slate-800 rounded-xl overflow-hidden shadow-lg hover:shadow-2xl 
                 transition-all duration-500 opacity-0 translate-y-8"
            data-category={template.category}
            data-title={template.title.toLowerCase()}
            data-description={template.description.toLowerCase()}
            style={`animation: fadeIn 0.6s ease-out ${index * 0.1}s forwards`}
          >
            <a
              href={template.link}
              target="_blank"
              rel="noopener noreferrer"
              class="block h-full"
            >
              <div class="relative aspect-video overflow-hidden">
                <Image
                  src={template.image as string}
                  width={800}
                  height={450}
                  alt={template.title}
                  class="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-700"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
              </div>
              <div class="p-6">
                <h3 class="text-2xl font-bold mb-2 text-foreground group-hover:text-orange-500 transition-colors duration-300">
                  {template.title}
                </h3>
                <p class="text-sm text-slate-600 dark:text-slate-300 mb-4 line-clamp-2">
                  {template.description}
                </p>
                <div class="flex justify-between items-center">
                  <span class="px-3 py-1 text-xs font-semibold text-white bg-gradient-to-r from-orange-500 to-amber-500 rounded-full">
                    {template.category}
                  </span>
                  <ExternalLink className="h-5 w-5 text-slate-400 group-hover:text-orange-500 transition-colors duration-300" />
                </div>
              </div>
            </a>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  @keyframes fadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .bg-grid-slate-200 {
    background-image: linear-gradient(
        to right,
        rgb(226 232 240 / 0.1) 1px,
        transparent 1px
      ),
      linear-gradient(to bottom, rgb(226 232 240 / 0.1) 1px, transparent 1px);
    background-size: 48px 48px;
  }

  .scrollbar-thin::-webkit-scrollbar {
    height: 6px;
  }

  .scrollbar-thin::-webkit-scrollbar-track {
    background: transparent;
  }

  .scrollbar-thin::-webkit-scrollbar-thumb {
    background: theme("colors.orange.500");
    border-radius: 9999px;
  }
</style>

<script>
  const categoryButtons = document.querySelectorAll(".category-btn");
  const templates = document.querySelectorAll("#template-container > div");
  const searchInput = document.getElementById("search-input");

  function filterTemplates() {
    const searchTerm = searchInput.value.toLowerCase();
    const activeCategory =
      document.querySelector('.category-btn[data-active="true"]')?.dataset
        ?.category || "all";

    const filteredTemplates = Array.from(templates).filter((template) => {
      const matchesCategory =
        activeCategory === "all" ||
        template.dataset.category === activeCategory;
      const matchesSearch = template.dataset.title.includes(searchTerm);
      return matchesCategory && matchesSearch;
    });

    // Reset all templates first
    templates.forEach((template) => {
      template.style.display = "none";
      template.style.opacity = "0";
      template.style.transform = "translateY(20px)";
      template.style.animation = "none";
    });

    // Show and animate filtered templates
    filteredTemplates.forEach((template, index) => {
      template.style.display = "block";
      // Force a reflow to ensure the animation restarts
      void template.offsetWidth;
      template.style.animation = `fadeIn 0.4s ease-out ${index * 0.1}s forwards`;
    });
  }

  categoryButtons.forEach((button) => {
    button.addEventListener("click", () => {
      categoryButtons.forEach((btn) => {
        btn.dataset.active = "false";
        btn.className = btn.className.replace(
          "bg-gradient-to-r from-orange-500 to-amber-500 text-white",
          "bg-white dark:bg-slate-800"
        );
      });
      button.dataset.active = "true";
      button.className = button.className.replace(
        "bg-white dark:bg-slate-800",
        "bg-gradient-to-r from-orange-500 to-amber-500 text-white"
      );
      filterTemplates();
    });
  });

  searchInput?.addEventListener("input", () => {
    filterTemplates();
  });

  // Initial filter
  filterTemplates();
</script>
